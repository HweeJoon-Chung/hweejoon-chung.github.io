<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://hweejoon-chung.github.io/author/hweejoon/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://hweejoon-chung.github.io/" rel="alternate" type="text/html" />
  <updated>2023-03-07T21:23:05+09:00</updated>
  <id>https://hweejoon-chung.github.io/author/hweejoon/feed.xml</id>

  
  
  

  
    <title type="html">HWEE JOON’s Persona | </title>
  

  
    <subtitle>CHUNG HWEE JOON&apos;s Personal Blog</subtitle>
  

  
    <author>
        <name>Chung Hwee Joon</name>
      
      
    </author>
  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">2021 ~ 2023년 수상경력 및 자격/수료증</title>
      <link href="https://hweejoon-chung.github.io/awards2023pre" rel="alternate" type="text/html" title="2021 ~ 2023년 수상경력 및 자격/수료증" />
      <published>2023-02-12T01:11:00+09:00</published>
      <updated>2023-02-12T01:11:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/awards2023pre</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/awards2023pre">&lt;hr /&gt;
&lt;h1 id=&quot;2021--2023년-수상경력-및-자격수료증&quot;&gt;2021 ~ 2023년 수상경력 및 자격/수료증&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;*2023.02. KAIST 사이버영재교육 수료&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*2023.01. SW미래채움 AI 인공지능 수료&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*2023.01. 모범학생 표창상&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*2022.01. 교과우수상 (정보:컴퓨터과학)&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*2021.12. 유네스코청소년기자단 수료증 &amp;amp; 상장&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*2021.07. 교과우수상 (통합사회, 통합과학, 정보:컴퓨터과학)&lt;/strong&gt;*&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/20230202_KAIST사이버영재교육_이수증.jpg&quot; alt=&quot;2021~2023년&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/20230115_AI인공지능수료증.jpg&quot; alt=&quot;2021~2023년&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/20230106_모범학생표창장_표선고.jpg&quot; alt=&quot;2021~2023년&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/20220104_정보_교과우수상.jpg&quot; alt=&quot;2021~2023년&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/20211218_한국유네스코기자.jpg&quot; alt=&quot;2021~2023년&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/20211218_유네스코청소년기자단.jpg&quot; alt=&quot;2021~2023년&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/20210715_통합사회통합과학정보_교과우수상.jpg&quot; alt=&quot;2021~2023년&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/favicon_64x64.png&quot; alt=&quot;hweejoon-chung.github.io&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">2021 ~ 2023년 수상경력 및 자격/수료증</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">게임 총알</title>
      <link href="https://hweejoon-chung.github.io/bullet-unity" rel="alternate" type="text/html" title="게임 총알" />
      <published>2023-01-08T05:14:00+09:00</published>
      <updated>2023-01-08T05:14:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/bullet-unity</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/bullet-unity">&lt;h1 id=&quot;게임-총알-game-bullet&quot;&gt;게임 총알 (Game Bullet)&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;총알을-발사하는-총-비행기-대포-전함-등과-같은-발사체-객체는-존재한다고-가정&quot;&gt;&lt;strong&gt;총알을 발사하는 총, 비행기, 대포, 전함 등과 같은 발사체 객체는 존재한다고 가정!&lt;/strong&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;총알-객체-prefab-만들기&quot;&gt;총알 객체 Prefab 만들기&lt;/h2&gt;

&lt;p&gt;Unity Hierarchy 창에서 오른쪽 마우스 클릭 &amp;gt; 3D Object &amp;gt; Sphere 클릭&lt;/p&gt;

&lt;p&gt;​	Bullet이라고 Name 변경&lt;/p&gt;

&lt;p&gt;(필요시) Hierarchy 창에서 Bullet 선택 &amp;gt; Inspector 창 &amp;gt; Transform 내 Scale 변경&lt;/p&gt;

&lt;p&gt;총알에 물리엔진 적용하기 위해 Inspector 창 &amp;gt; Add Component &amp;gt; RigidBody 클릭하여 RigidBody Component 추가&lt;/p&gt;

&lt;p&gt;Bullet을 Drag해서 Project 창의 Prefab 폴더로 Drop해서 Prefab으로 만들어 재사용.&lt;/p&gt;

&lt;p&gt;Hierarchy 창 Bullet 클릭하여 Delete.&lt;/p&gt;

&lt;h2 id=&quot;총알-발사-위치-설정하기&quot;&gt;총알 발사 위치 설정하기&lt;/h2&gt;

&lt;p&gt;발사체 객체에서 총알이 발사되는 위치 설정&lt;/p&gt;

&lt;p&gt;Hierarchy 창에서 오른쪽 마우스 클릭 &amp;gt; Create Empty 클릭&lt;/p&gt;

&lt;p&gt;​	ShootPos이라고 Name 변경&lt;/p&gt;

&lt;p&gt;(Scene창에서 총알 발사 위치 설정) Hierarchy 창에서 ShootPos 선택 &amp;gt; Inspector 창 &amp;gt; Transform 내 Position 변경 확인&lt;/p&gt;

&lt;p&gt;(총, 비행기, 대포, 전함 등이 이동할 때 발사 위치도 같이 이동위해 ShootPos을 해당 발사체 객체의 Child화) Hierarchy 창에서 ShootPos을 Drag해서 Hierarchy 창의 발사체 객체 이름 위에 Drop하여 Child화&lt;/p&gt;

&lt;p&gt;Hierarchy에서 발사체 객체를 클릭 &amp;gt; Inspector 창 &amp;gt; Overrides 클릭하여 ShootPos 추가 확인 &amp;gt; Apply All 클릭&lt;/p&gt;

&lt;h2 id=&quot;총알-발사-스크립트&quot;&gt;총알 발사 스크립트&lt;/h2&gt;

&lt;p&gt;Hierarchy 창에서 발사체 객체를 선택 &amp;gt; Inspector창 &amp;gt; Add Component 클릭&lt;/p&gt;

&lt;p&gt;​	ShootCtrl이라고 이름 입력하고 New script 클릭 &amp;gt; Create and Add 클릭하여 ShootCtrl 스크립트 생성&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public GameObject bullet;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	총알 객체 변수&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public Transform shootPos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	총알 위치 정보 변수&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if (Input.GetMouseButtonDown(0))
{
	Shoot();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	마우스 클릭 시 총알 발사함수&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;void Shoot()
{
    Instantiate(bullet, shootPos.position, shootPos.rotation);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	Instantiate()는 GameObject을 새로 생성하는 역할을 하는 함수.  Prefab 총알을 필요할때마다 복사해서 생성함.&lt;/p&gt;

&lt;p&gt;Project &amp;gt; Prefabs &amp;gt; Bullet을 Drag하여, Inspector &amp;gt; ShootCtrl (Script) &amp;gt; Bullet에(None 위로) Drop&lt;/p&gt;

&lt;p&gt;Hierarcy 창에서 발사체의 Child로 포함된 ShootPos을 Drag하여, Inspector &amp;gt; ShootCtrl (Script) &amp;gt; ShootPos에(None 위로) Drop&lt;/p&gt;

&lt;h2 id=&quot;총알-발사-강도-조정&quot;&gt;총알 발사 강도 조정&lt;/h2&gt;

&lt;p&gt;Prefab &amp;gt; Bullet을 Drag하여 Hierarchy 창에 Drop 
(Prefab의 Bullet을 다시 Hierarchy창으로 가져와 수정하고 재반영해야 함)&lt;/p&gt;

&lt;p&gt;​	Add Component 클릭 &amp;gt; BulletCtrl이라고 이름 입력하고 New script 클릭 &amp;gt; Create and Add 클릭하여 스크립트 생성&lt;/p&gt;

&lt;p&gt;힘을 가하기 위해 힘을 받을 대상으로 Bullet의 RigidBody Component활용&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private Rigidbody rb;
...
rb = GetComponent&amp;lt;Rigidbody&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	해당 클래스가 포함된 GameObject(Bullet)의 Rigidbody 컴포넌트 가져와서 rb에 대입&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rb.AddRelativeForce(Vector3.forward * 1000.0f);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	Vector3.forward(z축) 방향으로 1000.0f의 속도로 힘을 줌&lt;/p&gt;

&lt;p&gt;Bullet Prefab의 Inspector 창 Overrides 클릭하고 Bullet Ctrl 스크립트를 Apply All 클릭하여 변경사항 적용.
	Bullet Prefab 내 정보를 변경했으니 Prefab에 재반영.&lt;/p&gt;

&lt;p&gt;Hierarchy 창에 남아있는 Bullet 클릭하여 Delete.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;D:/_JOON/blog/_posts/assets/built/images/favicon_64x64.png&quot; alt=&quot;hweejoon-chung.github.io&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="unity" />
      

      
        <summary type="html">게임 총알 (Game Bullet)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">유니티 스크립트</title>
      <link href="https://hweejoon-chung.github.io/scripts-unity" rel="alternate" type="text/html" title="유니티 스크립트" />
      <published>2022-12-12T04:53:00+09:00</published>
      <updated>2022-12-12T04:53:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/scripts-unity</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/scripts-unity">&lt;h1 id=&quot;유니티-스크립트-unity-script&quot;&gt;유니티 스크립트 (Unity Script)&lt;/h1&gt;

&lt;h2 id=&quot;지난-정리&quot;&gt;지난 정리&lt;/h2&gt;

&lt;h3 id=&quot;객체에-대한-스크립트-추가&quot;&gt;객체에 대한 스크립트 추가&lt;/h3&gt;

&lt;p&gt;객체의 Inspector 창에서 Add Component 버튼 눌러 New script 검색해 추가&lt;/p&gt;

&lt;p&gt;스크립트 Name 입력하고 Create and Add 클릭하여 생성&lt;/p&gt;

&lt;p&gt;Inspector 창의 Script 항목에서 입력했던 Name을 더블클릭하면 Visual Studio 창이 뜸&lt;/p&gt;

&lt;h2 id=&quot;새로운-정리&quot;&gt;새로운 정리&lt;/h2&gt;

&lt;p&gt;Frame : 프레임. 동영상은 사진들을 시간상 연속해서 보여준다고 볼 수 있고, 사진 하나를 한 프레임이라 봄.&lt;/p&gt;

&lt;p&gt;Frame rate : 프레임율. 1초에 프레임(사진 하나)이 몇장 보이는지 프레임이 보이는 속도. 
초기영화는 초당 16(무성영화) ~ 24프레임(유성영화. 음향품질을 유지할 수 있는 최소 프레임률이 초당 24프레임).
PAL TV는 초당 25프레임 / NTSC TV는 초당 30프레임
(초기 CRT는 전원인 교류전류 주파수에 맞추어 화면 refresh. 유럽 50Hz교류전류이고 미국 60Hz교류전류.). 
캠코더 동영상 초당 50프레임(유럽기준). 
비디오게임/UHD TV는 초당 60프레임.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;void Start();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	첫번째 프레임이 업데이트되기 전에 호출됨. 프로그램에 사용할 변수나 초기 세팅 시 사용.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;void Update()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	프레임마다 호출됨. 보통 컴퓨터 활용시 초당 60프레임까지 가능.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private Transform tr;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	Transform은 위치정보를 담은 객체 변수 유형&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tr = GetComponent&amp;lt;Transform&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	해당 클래스가 포함된 GameObject의 Transform 컴포넌트 가져와서 tr에 대입&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tr.Translate();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	해당 GameObject의 좌표를 괄호 안 값만큼 변경. 좌표값(Translation) 변경.&lt;/p&gt;

&lt;p&gt;​	Time.deltaTime : 한 프레임이 차지하는 시간&lt;/p&gt;

&lt;p&gt;​	.normalized : 해당 성분들의 제곱을 더해 루트를 씌운 값이 1이 되게 변경(방향 성분만 남기고 크기는 1로 변경). 크기 영향은 받지 않고 방향 성분만 활용하기 위해 사용.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tr.transform.Rotate();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	해당 GameObject의 회전정보 변경&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Input.GetAxis(&quot;VerticalUI&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	유니티 창 Edit &amp;gt; Project Settings 클릭하고 Input Manager 클릭하면&lt;/p&gt;

&lt;p&gt;​	VerticalUI와 HorizontalUI Name보이는데, 각각의 ‘Positive Button’과 ‘Negative Button’을 확인해보자!&lt;/p&gt;

&lt;p&gt;​	VerticalUI : 컴퓨터 입력키 w와 s에 대응하는 단축어. w키 누르면 0부터 1씩 증가하고 s키 누르면 1씩 감소.&lt;/p&gt;

&lt;p&gt;​	HorizontalUI : 컴퓨터 입력키 d와 a에 대응하는 단축어. d키 누르면 1씩 증가하고 a키 누르면 1씩 감소&lt;/p&gt;

&lt;p&gt;​	(Name을 변경하면 바꾼 이름을 코딩 시 활용 가능)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Vector3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​	(x, y, z) 방향을 나타내는 변수 타입&lt;/p&gt;

&lt;p&gt;​	Vector3.forward : (0,0,1). z축 방향으로 1만큼 크기 가진 벡터. (유니티에서 자주 사용되는 값이라 미리 저장	된 변수)&lt;/p&gt;

&lt;p&gt;​	Vector3.right : (1,0,0). x축 방향으로 1만큼 크기 가진 벡터.  (유니티에서 자주 사용되는 값이라 미리 저장된 변수)&lt;/p&gt;

&lt;p&gt;​	Vector3.up : (0,1,0). y축 방향으로 1만큼 크기 가진 벡터.  (유니티에서 자주 사용되는 값이라 미리 저장된 변수)&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="unity" />
      

      
        <summary type="html">유니티 스크립트 (Unity Script)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">부피 미분과 겉넓이 - 미적분을 활용한 실생활 문제 해결</title>
      <link href="https://hweejoon-chung.github.io/calculusReallife-assessmentMATH" rel="alternate" type="text/html" title="부피 미분과 겉넓이 - 미적분을 활용한 실생활 문제 해결" />
      <published>2022-12-09T12:40:00+09:00</published>
      <updated>2022-12-09T12:40:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/calculusReallife-assessmentMATH</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/calculusReallife-assessmentMATH">&lt;hr /&gt;
&lt;h1 id=&quot;부피-미분과-겉넓이---미적분을-활용한-실생활-문제-해결&quot;&gt;부피 미분과 겉넓이 - 미적분을 활용한 실생활 문제 해결&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;/assets/built/data/20221209_2514 정휘준 - 미적분을 활용한 실생활 문제 해결 탐구 보고서.zip&quot;&gt;20221209_2514 정휘준 - 미적분을 활용한 실생활 문제 해결 탐구 보고서.hwp&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;u&gt;요약&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;부피를 미분한 결과와 겉넓이의 동일 여부와 특징에 따른 입체도형의 분류&lt;/li&gt;
  &lt;li&gt;회전체를 적분하면 밑면은 포함되지 않음&lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">부피 미분과 겉넓이 - 미적분을 활용한 실생활 문제 해결</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">미적분 탄도 미사일 구현</title>
      <link href="https://hweejoon-chung.github.io/calculusTrajectory-assessmentMATH" rel="alternate" type="text/html" title="미적분 탄도 미사일 구현" />
      <published>2022-12-03T17:25:00+09:00</published>
      <updated>2022-12-03T17:25:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/calculusTrajectory-assessmentMATH</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/calculusTrajectory-assessmentMATH">&lt;hr /&gt;
&lt;h1 id=&quot;미적분-탄도-미사일-구현&quot;&gt;미적분 탄도 미사일 구현&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;/assets/built/data/20221203_수행평가 양식_고2_미적분 탄도 미사일 구현.zip&quot;&gt;20221203_수행평가 양식_고2_미적분 탄도 미사일 구현.hwp&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;u&gt;요약&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;탄도궤적 운동의 수직운동과 수평운동을 구분하고, 각 운동들에 대해 미분, 적분, 삼각함수 등 수학적 개념을 활용하여 이차함수를 유도.&lt;/p&gt;

&lt;p&gt;유도된 이차함수식을 이용하여 거리, 시간, 발사각 계산하여, 탄도궤적 그래프를 엔트리 프로그래밍으로 구현&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">미적분 탄도 미사일 구현</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">유니티 객체</title>
      <link href="https://hweejoon-chung.github.io/object-unity" rel="alternate" type="text/html" title="유니티 객체" />
      <published>2022-11-12T03:12:00+09:00</published>
      <updated>2022-11-12T03:12:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/object-unity</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/object-unity">&lt;h1 id=&quot;유니티-객체-unity-object&quot;&gt;유니티 객체 (Unity Object)&lt;/h1&gt;

&lt;h3 id=&quot;환경-관련&quot;&gt;환경 관련&lt;/h3&gt;

&lt;p&gt;Directional Light : Scene에 빛을 주는 역할을 하는 게임 오브젝트&lt;/p&gt;

&lt;p&gt;Main Camera : Scene을 어떤 각도와 방향에서 볼 건지 결정해주는 게임 오브젝트&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hierarchy 창에서 Main Camera를 선택하고, Inspector 창의 Position/Rotation/Projection/Size 등 변경 가능&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;새로운-객체-등록&quot;&gt;새로운 객체 등록&lt;/h3&gt;

&lt;p&gt;Project 창의 Asset &amp;gt; Model 에서 여러 객체 모델 찾아 Hierarchy 창에 이동&lt;/p&gt;

&lt;p&gt;해당 객체 선택 후 Inspector 창의 Layer 변경 (UI, Ground, Players 등)&lt;/p&gt;

&lt;h3 id=&quot;객체에-component-추가&quot;&gt;객체에 Component 추가&lt;/h3&gt;

&lt;p&gt;객체의 Inspector 창에서 Add Component 버튼 클릭해 Rigidbody componet를 찾아 추가&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rigidbody Component : 해당 GameObject에 물리 엔진(중력, 충돌 등)을 적용하는 컴포넌트&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Box Collider componet를 찾아 추가&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Box Collider Component : 해당 GameObject와의 접촉/충돌 여부를 확인하기 위한 컴포넌트&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Audio Source component를 찾아 추가&lt;/p&gt;

&lt;p&gt;Audio Source Component : 게임이 시작되면 기본적으로 재생되는 소리 컴포넌트&lt;/p&gt;

&lt;h3 id=&quot;객체를-반복적으로-사용하기-위해-prefab-생성&quot;&gt;객체를 반복적으로 사용하기 위해 Prefab 생성&lt;/h3&gt;

&lt;p&gt;Hierarchy 창에 있는 객체를 드래그해서 Project창의 Prefab 폴더 안에 드랍&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이 객체의 원형은 하나로 유지되고 반복해서 사용 가능&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;객체에-대한-스크립트-추가&quot;&gt;객체에 대한 스크립트 추가&lt;/h3&gt;

&lt;p&gt;객체의 Inspector 창에서 Add Component 버튼 눌러 New script 검색해 추가&lt;/p&gt;

&lt;p&gt;스크립트 Name 입력하고 Create and Add 클릭하여 생성&lt;/p&gt;

&lt;p&gt;Inspector 창의 Script 항목에서 입력했던 Name을 더블클릭하면 Visual Studio 창이 뜸&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;D:/_JOON/blog/_posts/assets/built/images/favicon_64x64.png&quot; alt=&quot;hweejoon-chung.github.io&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="unity" />
      

      
        <summary type="html">유니티 객체 (Unity Object)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">혼성화 - 화학</title>
      <link href="https://hweejoon-chung.github.io/hybridization-assessmentCHEM" rel="alternate" type="text/html" title="혼성화 - 화학" />
      <published>2022-11-06T13:21:00+09:00</published>
      <updated>2022-11-06T13:21:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/hybridization-assessmentCHEM</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/hybridization-assessmentCHEM">&lt;hr /&gt;
&lt;h1 id=&quot;혼성화---화학&quot;&gt;혼성화 - 화학&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;/assets/built/data/20221106_화학_혼성화.zip&quot;&gt;20221106_화학_혼성화.hwp&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">혼성화 - 화학</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">공유결합 - 화학</title>
      <link href="https://hweejoon-chung.github.io/covalent-bond-assessmentCHEM" rel="alternate" type="text/html" title="공유결합 - 화학" />
      <published>2022-11-06T13:21:00+09:00</published>
      <updated>2022-11-06T13:21:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/covalent%20bond-assessmentCHEM</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/covalent-bond-assessmentCHEM">&lt;hr /&gt;
&lt;h1 id=&quot;공유결합---화학&quot;&gt;공유결합 - 화학&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;/assets/built/data/20221106_화학_공유결합.zip&quot;&gt;20221106_화학_공유결합.hwp&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">공유결합 - 화학</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">용어 정리</title>
      <link href="https://hweejoon-chung.github.io/terms-unity" rel="alternate" type="text/html" title="용어 정리" />
      <published>2022-10-16T22:31:00+09:00</published>
      <updated>2022-10-16T22:31:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/terms-unity</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/terms-unity">&lt;h1 id=&quot;unity-용어-정리&quot;&gt;UNITY 용어 정리&lt;/h1&gt;

&lt;p&gt;Scene : 하나의 게임 월드&lt;/p&gt;

&lt;p&gt;Game Object : Scene에 추가하고 관리할 게임 객체.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Main Camera 객체와 Directional Light 객체는 새로운 Scene을 만들 때 자동 생성됨.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Scene Gizmo : Scene View의 우측 상단에 나타나는 Scene 전체의 나침반처럼 쓰이는 좌표계 장치.&lt;/p&gt;

&lt;p&gt;Component : Game Object의 정보. (Game Object는 다양한 Component들의 구성으로 이뤄짐.)&lt;/p&gt;

&lt;p&gt;Scene Edit Tool : Scene View 외곽 상단에 나타나는 핸드/평행이동/회전/스케일/렉트 툴 아이콘 모음.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;핸드툴(단축키 q) : Game Object을 조작할 수는 없고 Scene에서 바라보고 있는 시점 변경
평행이동 툴(단축키 w) : Game Object을 화살표(빨강/파랑/초록) 방향으로 이동
회전 툴(단축키 e) : 선택 시 나타나는 곡선을 기준으로 회전
스케일 툴(단축키 r) : Game Object의 크기 변경
렉트 툴 : 한 축을 무시하고 다른 두 축으로 이루어진 평면의 크기 변경&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Asset Store : 원하는 키워드를 검색해 다양한 Asset들을 다운로드 가능&lt;/p&gt;

&lt;p&gt;Package Manager : 프로젝트에 추가할 Asset을 다운로드하여 Import(추가) 가능&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Asset Store =&amp;gt; 검색 =&amp;gt; 원하는 Asset을 “내 에셋에 추가하기” =&amp;gt; 
다운로드 후 “유니티에서 열기” &amp;gt; “Unity Editor 열기” =&amp;gt; 
Pakage Manager =&amp;gt; Packages in Project &amp;gt; My Assets =&amp;gt;
원하는 Asset을 다운로드하고 Import 후 Install/Upgrade =&amp;gt;
Import Unity Package &amp;gt; Import 선택 =&amp;gt; Project 창 내 Assets에 추가된 내용 확인 가능&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;참고로 지난 설정 포스트 글에서 정리했던 Unity Editor 내 Window들 역할/기능들은 아래와 같다.&lt;/p&gt;

&lt;h2 id=&quot;unity-editor-내-window들-역할기능&quot;&gt;Unity Editor 내 Window들 역할/기능&lt;/h2&gt;

&lt;h3 id=&quot;scene-view&quot;&gt;Scene View&lt;/h3&gt;

&lt;p&gt;Scene이라는 개념은 일종의 맵/레벨임&lt;/p&gt;

&lt;p&gt;Scene View는 현재 프로젝트에서 내가 제작 중인 전체를 볼 수 있어, 배경/캐랙터/소품 등을 배치하기 위한 용도로 사용&lt;/p&gt;

&lt;h3 id=&quot;hierarchy-window&quot;&gt;Hierarchy Window&lt;/h3&gt;

&lt;p&gt;Scene View에 배치되어 있는 물체(Object)들을 보여줌&lt;/p&gt;

&lt;p&gt;Scene 이름, 포함된 Object들&lt;/p&gt;

&lt;p&gt;기본 Object : Main Camera / Directional Light&lt;/p&gt;

&lt;h3 id=&quot;project-window&quot;&gt;Project Window&lt;/h3&gt;

&lt;p&gt;현재 프로젝트에 포함된 텍스처/모델링/스크립트/Scene 등의 Asset을 보여줌&lt;/p&gt;

&lt;p&gt;실제 프로젝트 구성에 필요한 모든 자료(Asset)들이 모여있는 곳&lt;/p&gt;

&lt;p&gt;필요한 Asset들을 Asset Store에서 다운로드하거나, 새로운 스크립트를 생성하여 Object에 기능을 부여할 때 등 모든 Asset들을 관리&lt;/p&gt;

&lt;h3 id=&quot;inspector-window&quot;&gt;Inspector Window&lt;/h3&gt;

&lt;p&gt;Scene View나 Hierarchy/Project Window에 있는 Object나 Asset을 선택하면 자세한 내용들을 보여줌&lt;/p&gt;

&lt;p&gt;Object나 Asset의 자세한 정보를 확인하고 수정할 수 있음&lt;/p&gt;

&lt;h3 id=&quot;game-view&quot;&gt;Game View&lt;/h3&gt;

&lt;p&gt;Scene View와 유사하지만 다른 점은 카메라가 보여주는 것만을 볼 수 있음&lt;/p&gt;

&lt;p&gt;실제로 우리가 개발한 프로그램이 실행될 때 보게 될 장면을 보여주는 창&lt;/p&gt;

&lt;h3 id=&quot;asset-store&quot;&gt;Asset Store&lt;/h3&gt;

&lt;p&gt;프로젝트에 사용할 수 있는 다양한 에셋들을 다운로드할 수 있는 곳&lt;/p&gt;

&lt;p&gt;Avatar/네트워킹관련/가구나 과일 같은 Object 등 다른 사람이 만든 Asset들을 다운받아 사용 가능&lt;/p&gt;

&lt;h3 id=&quot;console-window&quot;&gt;Console Window&lt;/h3&gt;

&lt;p&gt;프로그래밍을 할 때 필수적인 로그라는 형태의 다양한 메시지들이 나타남&lt;/p&gt;

&lt;p&gt;개발 도중 발생한 에러/경고 확인 가능&lt;/p&gt;

&lt;p&gt;구현한 기능들을 테스트하거나 값들을 확인 가능&lt;/p&gt;

&lt;p&gt;출력된 로그들을 더블클릭하면 코드를 입력하고 수정할 수 있는 Visual Studio가 열리고 해당 로그가 출력된 스크립트 위치로 이동&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;D:/_JOON/blog/_posts/assets/built/images/favicon_64x64.png&quot; alt=&quot;hweejoon-chung.github.io&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="unity" />
      

      
        <summary type="html">UNITY 용어 정리</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">소논문 제안서 수정버전 (Proposal updated)</title>
      <link href="https://hweejoon-chung.github.io/eeproposalupdate-paper" rel="alternate" type="text/html" title="소논문 제안서 수정버전 (Proposal updated)" />
      <published>2022-10-04T04:55:00+09:00</published>
      <updated>2022-10-04T04:55:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/eeproposalupdate-paper</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/eeproposalupdate-paper">&lt;hr /&gt;
&lt;h1 id=&quot;소논문-제안서--수정버전-ib컴퓨터과학-sl&quot;&gt;소논문 제안서 : 수정버전 (IB컴퓨터과학 SL)&lt;/h1&gt;

&lt;h2 id=&quot;참고-일정&quot;&gt;참고 일정&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;ul class=&quot;task-list&quot;&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;~ 2022년 8월 29일 : 소논문 제안서 제출 마감&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;9월 중 : 지도교사 배정 - &lt;strong&gt;첫번째 필수성찰세션 (1st mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;11월 말 : 소논문 1,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;12월 말 : 소논문 2,000단어 분량 작성 - &lt;strong&gt;두번째 필수성찰세션 (2nd mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 3월 중순 : 소논문 3,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 5월 중순 : 소논문 4,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 5월 31일 : 소논문 최종본 제출 마감 - &lt;strong&gt;마지막 필수성찰세션(viva voce: final mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;관련 문의 : 소논문 코디네이터 (064-786-5577, &lt;a href=&quot;mailto:hatsal@korea.kr&quot;&gt;hatsal@korea.kr&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/favicon_64x64.png&quot; alt=&quot;hweejoon-chung.github.io&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;주제---주제-선정-이유&quot;&gt;주제 ( + 주제 선정 이유)&lt;/h2&gt;

&lt;p&gt;내가 바라는 미래의 내 모습은 세계 각국의 사람들이 이용하는 게임과 로봇을 만드는 프로그래머이고, 그 프로그래머가 되기 위해 필요한 컴퓨터 과학은 내가 관심있어 하고 좋아하기도 하는 학문분야다.&lt;/p&gt;

&lt;p&gt;나는 가끔 공부를 하면서 복잡해진 머리를 식히려 가끔 게임을 즐기고 만든다.&lt;/p&gt;

&lt;p&gt;엔트리와 파이썬으로 탄도 슈팅 게임 몇 가지를 만들어 즐기던 중, 게임 속 로봇이 다수의 총알이나 화살이 발사하는데 그 발사체들이 특정 개수를 넘어서면 전체 게임 동작이 심각하게 느려지거나 심지어 몇몇 기능들은 정상적으로 동작하지 않기도 하는 상황이 발생한다. 그 원인들을 분석하다 보니 단순히 탄도 궤적 연산 처리속도의 문제보다 메모리 사용량이 많아진 것이 주원인이었다.&lt;/p&gt;

&lt;p&gt;게임 플랫폼에서 프로그래밍 시 탄도 개체들이 많아지면 궤도 연산량과 메모리 사용량이 어떤 식으로 변화하는지 확인해보고 탄도 개체들이 늘어날 때 궤적 연산에 대한 시간복잡도나 메모리 사용량을 개선할 수 있는 방안이 있는지 실제 설계/구현을 통해서 연구/확인해보고자 한다.&lt;/p&gt;

&lt;p&gt;My future hope is that I am a programmer who makes games and robots used by people around the world, and the computer science that I need to become a programmer is an academic field that I am interested in and like.&lt;/p&gt;

&lt;p&gt;I sometimes play games and develop them at home to cool down my complicated head while studying at school.&lt;/p&gt;

&lt;p&gt;While developing and enjoying several ballistic-shooting games with Entry and Python, the robot in the game fires a number of bullets or arrows, and if the projectiles exceed a certain number, the overall game movement may be severely slowed down or even some functions may not work properly. As analyzing the causes, the main reason was that memory usage increased rather than simply the problem of the processing speed of the ballistic trajectory calculation.&lt;/p&gt;

&lt;p&gt;When programming on a game platform, I will check how ballistic trajectory computation and memory usage change when there are more ballistic &lt;strong&gt;entities&lt;/strong&gt;(objects), and study/verify through specific design/implementation to see if there is a way to improve time complexity or memory usage for trajectory computation when the &lt;strong&gt;entities&lt;/strong&gt;(objects) increase.&lt;/p&gt;

&lt;p&gt;제목 :&lt;/p&gt;

&lt;p&gt;게임 로봇의 탄도궤적 연산과 메모리 사용량 변화 확인을 통한 다수 개체 생성 설계 전략에 대한 연구&lt;/p&gt;

&lt;p&gt;A Study on Design Strategies of Multiple Entities(Objects) Generation by Checking Ballistic Trajectory Computation Volume and Memory Usage of Game Robots&lt;/p&gt;

&lt;p&gt;A Study on Design Strategies of Multiple Object Generation based on Identifying Changes of Ballistic Trajectory Computation and Memory Usage for Game Robots&lt;/p&gt;

&lt;p&gt;A Study on Design Strategies by Identifying Ballistic Trajectory Computation Volume &amp;amp; Memory Changes when Creating Multiple &lt;strong&gt;Entities&lt;/strong&gt;(Objects) in the Game&lt;/p&gt;

&lt;p&gt;게임플랫폼의 탄도궤적 연산량과 메모리 사용량 개선을 위한 다수 게임개체 생성 기법 설계/구현&lt;/p&gt;

&lt;p&gt;Design and Implementation about Creation Approach of Game &lt;strong&gt;Entities&lt;/strong&gt;(Objects) for improving Ballistic Trajectory Computation and Memory Usage in Game Platform&lt;/p&gt;

&lt;p&gt;Design and Implementation of Multiple Game Object Creation Approach to Improve Ballistic Trajectory Computation and Memory Usage in Game Platform&lt;/p&gt;

&lt;h2 id=&quot;연구-질문-연구할-가치가-있나-중요한가&quot;&gt;연구 질문 (연구할 가치가 있나? 중요한가?)&lt;/h2&gt;

&lt;p&gt;컴퓨터 하드웨어 사양이 발전하면서 고성능의 기기에서 동작하는 게임 플랫폼 또한 복잡해지는 경향을 보이고 있다. 하지만 게임 플랫폼 자체는 사용 기기 내 자원들에 대한 메모리 사용 제약이 존재하고 대기시간이나 반응속도에 대한 품질을 보장할 수 있는 효율적인 메모리 관리와 활용 방안이 필요하다.&lt;/p&gt;

&lt;p&gt;또한 시간이 흐르고 새로운 게임이 출시될 때마다 매번 가지고 있는 기기의 사양보다 높은 사양을 요구하는데, 이는 게임 내에 다양한 종류의 수많은 게임 개체들이 존재하고 그 개체들을 화려한 그래픽으로 표현하기 위해 효율성, 특히 연산시간이나 메모리에 대한 효율성을 요구하기 때문이다.&lt;/p&gt;

&lt;p&gt;근본적으로 프로그래밍 관점에서 연산이나 메모리에 대한 효율성 관리를 위해서 다수의 게임 개체들을 만드는데 연산량과 메모리 사용량이 어떻게 변화하는지 확인하고 보다 효과적인 프로그램 설계/구현 방안을 연구/확인하여 미래 게임 개발자로서 중요한 경험과 역량을 쌓고자 한다.&lt;/p&gt;

&lt;p&gt;As computer hardware specifications develop, game platforms that operate on high-performance devices also tend to be complicated. However, there are restrictions on memory usage or resources in the device. So, the game platform itself needs efficient memory management and utilization measures that can ensure the quality of latency or response speed.&lt;/p&gt;

&lt;p&gt;In addition, each time a new game is released, it requires higher specifications than the device’s specifications, because there are many different types of game &lt;strong&gt;entities&lt;/strong&gt;(objects) in the game and they require efficiency, especially computational time or memory, to represent them in fancy graphics.&lt;/p&gt;

&lt;p&gt;Fundamentally, for efficiency management of computation or memory from a programming point of view, I want to learn how computation and memory usage change in creating multiple game &lt;strong&gt;entities&lt;/strong&gt;(objects) and study/verify more effective program design/implementation methods to build important experiences and capabilities as future game developers.&lt;/p&gt;

&lt;h2 id=&quot;연구-방법-어떤-방법으로-연구할-계획인가&quot;&gt;연구 방법 (어떤 방법으로 연구할 계획인가?)&lt;/h2&gt;

&lt;p&gt;먼저 연구 주제에 대해 추가로 학습할 것이 있는지 확인하고 학습과 병행하여 선행 연구와 관련 자료들을 찾는다. 그것을 통해 탄도궤적 연산 및 적절한 메모리 변화 조사 방안을 마련하고 효율적인 게임 개체 생성 방안을 연구한다. 연구 관련 용어집 정리와 관련 자료 리서치는 연구 중에 지속적으로 수행한다.&lt;/p&gt;

&lt;p&gt;최종적으로 실험에 쓰일 게임 개체 생성 프로그램에 대한 요구사항 도출, 설계, 구현 및 테스트를 통해 메모리 변화를 조사하고 개선 사항을 검증한다.&lt;/p&gt;

&lt;p&gt;First, I will check if there is anything else to learn about the research topic and find previous studies and related materials in parallel with learning. Through that, I will prepare a ballistic trajectory computation and  an appropriate memory change investigation plan and study an efficient game &lt;strong&gt;entities&lt;/strong&gt;(objects) generation plan. Research-related glossary organization and related data research are continuously carried out during the study.&lt;/p&gt;

&lt;p&gt;Finally, I’ll investigate memory changes and validate improvements by requirements deriving, designing, implementing, and testing for game &lt;strong&gt;entities&lt;/strong&gt;(objects) generation programs to be used in experiments.&lt;/p&gt;

&lt;h2 id=&quot;선행연구-및-관련-주제-자료-각-유형별-2개-이상-작성&quot;&gt;선행연구 및 관련 주제 자료 (각 유형별 2개 이상 작성)&lt;/h2&gt;

&lt;h3 id=&quot;단행본&quot;&gt;단행본&lt;/h3&gt;

&lt;p&gt;코딩을 지탱하는 기술 : 원리로 깨우치는 프로그래밍 기법 (니시오 히로카즈, 비제이퍼블릭)&lt;/p&gt;

&lt;p&gt;게임으로 배우는 파이썬 (다나카 겐이치로, 영진닷컴)&lt;/p&gt;

&lt;p&gt;Design Pattern (Erich Gamma/Richard Helm/Ralph Johnson/John Vlissides, Addison-Wesley)&lt;/p&gt;

&lt;p&gt;Technology to support coding : principled programming techniques (Hirokazu Nishio, BJPublic)&lt;/p&gt;

&lt;p&gt;Python learned by games (Kenichiro Tanaka, youngjin.com)&lt;/p&gt;

&lt;p&gt;Design Pattern (Erich Gamma/Richard Helm/Ralph Johnson/John Vlissides, Addison-Wesley)&lt;/p&gt;

&lt;h3 id=&quot;논문&quot;&gt;논문&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;수동 유도 미사일 제어를 위한 선형화된 곡률 유도 알고리즘&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A linearized curvature guidance algorithm for a passive homing missile&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제어로봇시스템학회 1996년도 한국자동제어학술회의논문집(국내학술편); 포항공과대학교, 포항; 24-26 Oct. 1996&lt;/strong&gt; &lt;a href=&quot;javascript:srchJournalNew(&apos;volumename&apos;,&quot; title=&quot;NPAP&apos;, &apos;286789&apos;, &apos;1996 Oct. 01&quot;&gt;1996 Oct. 01&lt;/a&gt;) , 1996년, pp.245 - 248&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:searchTag(&apos;%EC%8B%A0%EC%9A%A9%EC%A4%80&quot; title=&quot;);)([미시간 대학교 전기 및 컴퓨터 공학과](javascript:searchTag(&apos;%EB%AF%B8%EC%8B%9C%EA%B0%84 %EB%8C%80%ED%95%99%EA%B5%90 %EC%A0%84%EA%B8%B0 %EB%B0%8F %EC%BB%B4%ED%93%A8%ED%84%B0 %EA%B3%B5%ED%95%99%EA%B3%BC&quot;&gt;신용준 &lt;/a&gt;;)) ;  &lt;a href=&quot;javascript:searchTag(&apos;%EA%B9%80%EA%B2%BD%EA%B7%BC&quot; title=&quot;););  [박진배](javascript:searchTag(&apos;%EB%B0%95%EC%A7%84%EB%B0%B0&quot;&gt;김경근 &lt;/a&gt;;)&lt;/p&gt;

&lt;p&gt;KCI 등재&lt;/p&gt;

&lt;p&gt;&lt;em&gt;게임&lt;/em&gt; 소프트웨어의 품질 평가 모델 &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000297010&amp;amp;citationBean.artiId=ART001219939&quot;&gt;정혜정&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poInsiSearSoceView.kci?insiGeneInfoBean.insiId=INS000001854&quot;&gt;한국인터넷정보학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/ci/seriesSearch/ciSereInfoView.kci?sereSearBean.insiId=INS000001854&amp;amp;sereSearBean.sereId=001022&quot;&gt;인터넷정보학회논문지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poSereArtiList.kci?sereId=001022&amp;amp;volIsseId=VOL000000038&quot;&gt;8(6)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pp.115~125&lt;/li&gt;
  &lt;li&gt;2007.12&lt;/li&gt;
  &lt;li&gt;컴퓨터학&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;KCI 등재&lt;/p&gt;

&lt;p&gt;기획자를 위한 &lt;em&gt;객체&lt;/em&gt;지향적 &lt;em&gt;게임&lt;/em&gt;시스템 기획 방법 &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000283977&amp;amp;citationBean.artiId=ART002115504&quot;&gt;장희동&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poInsiSearSoceView.kci?insiGeneInfoBean.insiId=INS000000291&quot;&gt;한국&lt;em&gt;게임&lt;/em&gt;학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/ci/seriesSearch/ciSereInfoView.kci?sereSearBean.insiId=INS000000291&amp;amp;sereSearBean.sereId=001683&quot;&gt;한국&lt;em&gt;게임&lt;/em&gt;학회 논문지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poSereArtiList.kci?sereId=001683&amp;amp;volIsseId=VOL000073663&quot;&gt;16(3)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pp.17~26&lt;/li&gt;
  &lt;li&gt;2016.06&lt;/li&gt;
  &lt;li&gt;학제간연구&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;파이썬 활용한 데이터 처리 성능 향상방법 제안 (한국정보전자통신기술학회 2020, 김효관, 황원용)&lt;/p&gt;

&lt;p&gt;An Evaluation Model of Game Software   &lt;strong&gt;Journal of Korean Society for Internet Information&lt;/strong&gt; &lt;a href=&quot;javascript:srchJournalNew(&apos;volumename&apos;,&quot; title=&quot;NART&apos;, &apos;291710&apos;, &apos;v.8 no.6&quot;&gt;v.8 no.6&lt;/a&gt;) , 2007&lt;/p&gt;

&lt;p&gt;An Object-oriented Design Method of Game System for Game Designers  &lt;strong&gt;Journal of Korea Game Society&lt;/strong&gt; &lt;a href=&quot;javascript:srchJournalNew(&apos;volumename&apos;,&quot; title=&quot;NART&apos;, &apos;294576&apos;, &apos;v.16 no.3&quot;&gt;v.16 no.3&lt;/a&gt;) , 2016&lt;/p&gt;

&lt;p&gt;Proposal For Improving Data Processing Performance Using Python  &lt;strong&gt;Journal of Korea institute of information, electronics, and communication technology&lt;/strong&gt; &lt;a href=&quot;javascript:srchJournalNew(&apos;volumename&apos;,&quot; title=&quot;NART&apos;, &apos;564564&apos;, &apos;v.13 no.4&quot;&gt;v.13 no.4&lt;/a&gt;) , 2020&lt;/p&gt;

&lt;p&gt;KCI 등재&lt;/p&gt;

&lt;p&gt;&lt;em&gt;DirectX&lt;/em&gt;를 &lt;em&gt;이용&lt;/em&gt;한 &lt;em&gt;게임&lt;/em&gt; &lt;em&gt;설계&lt;/em&gt;에서의 &lt;em&gt;생성&lt;/em&gt; &lt;em&gt;패턴&lt;/em&gt; &lt;em&gt;적용&lt;/em&gt; &lt;em&gt;기법&lt;/em&gt; &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000365858&amp;amp;citationBean.artiId=ART000957376&quot;&gt;김종수&lt;/a&gt; &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000301226&amp;amp;citationBean.artiId=ART000957376&quot;&gt;김태석&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poInsiSearSoceView.kci?insiGeneInfoBean.insiId=INS000001307&quot;&gt;한국멀티미디어학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/ci/seriesSearch/ciSereInfoView.kci?sereSearBean.insiId=INS000001307&amp;amp;sereSearBean.sereId=000883&quot;&gt;멀티미디어학회논문지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poSereArtiList.kci?sereId=000883&amp;amp;volIsseId=VOL000000016&quot;&gt;8(4)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pp.11~11&lt;/li&gt;
  &lt;li&gt;2005.04&lt;/li&gt;
  &lt;li&gt;전자/정보통신공학&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Java 기반 플랫폼 성능향상을 위한 모바일 게임 개발방법론&lt;/p&gt;

&lt;p&gt;Mobile Game Coding Method for Improving Performance of Java-based Platform&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=230832&quot;&gt;김혜정 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=920920&quot;&gt;남진우 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=927634&quot;&gt;문형석 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=929701&quot;&gt;송범휘 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=929702&quot;&gt;이학준 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=929703&quot;&gt;홍영화 &lt;/a&gt;,  주문원 ,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=909867&quot;&gt;최영미 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=840360&quot;&gt;진성아&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dbpia.co.kr/journal/iprdDetail?iprdId=IPRD00010944&quot;&gt;한국멀티미디어학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dbpia.co.kr/journal/publicationDetail?publicationId=PLCT00001772&quot;&gt;한국멀티미디어학회 학술발표논문집&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dbpia.co.kr/journal/voisDetail?voisId=VOIS00077264&quot;&gt;2006년도 추계학술발표논문집&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2006.11 / 797 - 800 (4 pages)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;학술대회자료&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기사-및-잡지-기타-유형의-자료&quot;&gt;기사 및 잡지, 기타 유형의 자료&lt;/h3&gt;

&lt;p&gt;https://www.codingame.com/start  : 다양한 프로그래밍 언어를 사용할 수 있는 게임 코딩 연습 사이트&lt;/p&gt;

&lt;p&gt;https://www.oodesign.com/design-principles : 객체지향 설계 개념 사이트&lt;/p&gt;

&lt;p&gt;https://www.geogebra.org/ : GeoGebra 사이트 (그래프 사이트)&lt;/p&gt;

&lt;p&gt;https://www.doopedia.co.kr/doopedia/master/master.do?_method=view&amp;amp;MAS_IDX=101013000907419 : “포물선운동” (작성일 표기 없음), 두산백과&lt;/p&gt;

&lt;p&gt;https://www.codingame.com/start  : Game coding practice site with a variety of programming languages&lt;/p&gt;

&lt;p&gt;https://www.oodesign.com/design-principles : Object-oriented design concept site&lt;/p&gt;

&lt;p&gt;https://www.geogebra.org/ : GeoGebra (for graph)&lt;/p&gt;

&lt;p&gt;https://www.doopedia.co.kr/doopedia/master/master.do?_method=view&amp;amp;MAS_IDX=101013000907419 : “a parabolic motion”  Doosan encyclopedia&lt;/p&gt;

&lt;p&gt;등등&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/favicon_64x64.png&quot; alt=&quot;hweejoon-chung.github.io&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;저작권법 / 무단전재 및 재배포 금지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">소논문 제안서 : 수정버전 (IB컴퓨터과학 SL)</summary>
      

      
      
    </entry>
  
</feed>
