<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://hweejoon-chung.github.io/author/hweejoon/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://hweejoon-chung.github.io/" rel="alternate" type="text/html" />
  <updated>2022-08-21T13:21:25+09:00</updated>
  <id>https://hweejoon-chung.github.io/author/hweejoon/feed.xml</id>

  
  
  

  
    <title type="html">HWEE JOON’s Persona | </title>
  

  
    <subtitle>CHUNG HWEE JOON&apos;s Personal Blog</subtitle>
  

  
    <author>
        <name>Chung Hwee Joon</name>
      
      
    </author>
  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">소논문 제안서</title>
      <link href="https://hweejoon-chung.github.io/eeproposal-paper" rel="alternate" type="text/html" title="소논문 제안서" />
      <published>2022-08-20T23:49:00+09:00</published>
      <updated>2022-08-20T23:49:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/eeproposal-paper</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/eeproposal-paper">&lt;hr /&gt;
&lt;h1 id=&quot;소논문-제안서-ib컴퓨터과학-sl&quot;&gt;소논문 제안서 (IB컴퓨터과학 SL)&lt;/h1&gt;

&lt;h2 id=&quot;참고-일정&quot;&gt;참고 일정&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;ul class=&quot;task-list&quot;&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;~ 2022년 8월 29일 : 소논문 제안서 제출 마감&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;9월 중 : 지도교사 배정 - &lt;strong&gt;첫번째 필수성찰세션 (1st mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;11월 말 : 소논문 1,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;12월 말 : 소논문 2,000단어 분량 작성 - &lt;strong&gt;두번째 필수성찰세션 (2nd mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 3월 중순 : 소논문 3,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 5월 중순 : 소논문 4,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 5월 31일 : 소논문 최종본 제출 마감 - &lt;strong&gt;마지막 필수성찰세션(viva voce: final mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;관련 문의 : 소논문 코디네이터 (064-786-5577, &lt;a href=&quot;mailto:hatsal@korea.kr&quot;&gt;hatsal@korea.kr&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;주제---주제-선정-이유&quot;&gt;주제 ( + 주제 선정 이유)&lt;/h2&gt;

&lt;p&gt;내가 바라는 미래의 내 모습은 세계 각국의 사람들이 이용하는 게임을 만드는 프로그래머이고, 그 프로그래머가 되기 위해 필요한 컴퓨터 과학은 내가 관심있어 하고 좋아하기도 하는 학문분야다.&lt;/p&gt;

&lt;p&gt;나는 가끔 공부를 하면서 복잡해진 머리를 식히려 가끔 게임을 즐기고 만든다.&lt;/p&gt;

&lt;p&gt;내가 직접 만들어본 적 있는 장르 중 하나인 탄막 슈팅 게임에서는 다수의 총알이나 화살이 발사되는데, 그 발사되는 총알이나 화살이 특정 개수를 넘어서면 전체 게임 동작이 심각하게 느려지는 상황이 발생한다. 그 원인들을 분석하다 보니 단순히 처리속도의 문제보다 메모리 사용량이 많아진 것이 주원인이었다.&lt;/p&gt;

&lt;p&gt;게임 플랫폼에서 프로그래밍 시 게임 속 개체들이 많아지면 메모리 사용량이 어떤 식으로 변화하는지 확인해보고 개체들이 늘어날 때 시간복잡도나 메모리 사용량을 개선할 수 있는 방안이 있는지 실제 설계/구현을 통해서 연구/확인해보고자 한다.&lt;/p&gt;

&lt;p&gt;My future hope is that I am a programmer who makes games used by people around the world, and the computer science that I need to become a programmer is an academic field that I am interested in and like.&lt;/p&gt;

&lt;p&gt;I sometimes play games and make them at home to cool down my complicated head while studying at school.&lt;/p&gt;

&lt;p&gt;In the bullet-shooting game, one of the genres I’ve made myself, a number of bullets or arrows are fired, and when the number of bullets or arrows exceeds a certain number, the overall game movement is severely slowed down. When analyzing the causes, the main reason was that memory usage increased more than just a problem of processing speed.&lt;/p&gt;

&lt;p&gt;When programming on a game platform, I want to check how memory usage changes when there are more objects in the game, and research/confirm through actual design/implementation to see if there is a way to improve time complexity or memory usage when there are more objects.&lt;/p&gt;

&lt;p&gt;제목 :&lt;/p&gt;

&lt;p&gt;게임 내 다수의 개체 생성 시 메모리 변화 확인 통한 설계 전략에 대한 연구&lt;/p&gt;

&lt;p&gt;A Study on Design Strategies by Identifying Memory Changes when Creating Multiple Objects in the Game&lt;/p&gt;

&lt;p&gt;게임플랫폼의 메모리 사용량 개선을 위한 다수 게임개체 생성 기법 설계/구현&lt;/p&gt;

&lt;p&gt;Design and Implementation about Creation Approach of Game Object for improving memory usage in Game Platform&lt;/p&gt;

&lt;h2 id=&quot;연구-질문-연구할-가치가-있나-중요한가&quot;&gt;연구 질문 (연구할 가치가 있나? 중요한가?)&lt;/h2&gt;

&lt;p&gt;컴퓨터 하드웨어 사양이 발전하면서 고성능의 기기에서 동작하는 게임 플랫폼 또한 복잡해지는 경향을 보이고 있다. 하지만 게임 플랫폼 자체는 사용 기기 내 자원들에 대한 메모리 사용 제약이 존재하고 대기시간이나 반응속도에 대한 품질을 보장할 수 있는 효율적인 메모리 관리와 활용 방안이 필요하다.&lt;/p&gt;

&lt;p&gt;또한 시간이 흐르고 새로운 게임이 출시될 때마다 매번 가지고 있는 기기의 사양보다 높은 사양을 요구하는데, 이는 게임 내에 다양한 종류의 수많은 게임 개체들이 존재하고 그 개체들을 화려한 그래픽으로 표현하기 위해 효율성, 특히 연산시간이나 메모리에 대한 효율성을 요구하기 때문이다.&lt;/p&gt;

&lt;p&gt;근본적으로 프로그래밍 관점에서 메모리에 대한 효율성 관리를 위해서 다수의 게임 개체들을 만드는데 메모리가 어떻게 변화하는지 확인하고 보다 효과적인 프로그램 설계/구현 방안을 연구/확인하여 미래 게임 개발자로서 중요한 경험과 역량을 쌓고자 한다.&lt;/p&gt;

&lt;p&gt;As computer hardware specifications develop, game platforms that operate on high-performance devices also tend to be complicated. However, there are restrictions on memory usage or resources in the device. So, the game platform itself needs efficient memory management and utilization measures that can guarantee the quality of latency or response speed.&lt;/p&gt;

&lt;p&gt;In addition, each time a new game is released, it requires higher specifications than the device’s specifications, because there are many different types of game objects in the game and they require efficiency, especially computational time or memory, to represent them in colorful graphics.&lt;/p&gt;

&lt;p&gt;From a programming perspective, I want to build important experience and capabilities as a future game developer by checking how memory changes in creating multiple game objects and researching/verifying more effective program design/implementation methods.&lt;/p&gt;

&lt;h2 id=&quot;연구-방법-어떤-방법으로-연구할-계획인가&quot;&gt;연구 방법 (어떤 방법으로 연구할 계획인가?)&lt;/h2&gt;

&lt;p&gt;먼저 추가로 학습할 것이 있는지 확인하고 학습과 병행하여 선행 연구와 관련 자료들을 찾는다. 그것을 통해 적절한 메모리 변화 조사 방안을 마련하고 효율적인 게임 개체 생성 방안을 연구한다.&lt;/p&gt;

&lt;p&gt;최종적으로 실험에 쓰일 게임 개체 생성 프로그램에 대한 요구사항 도출, 설계, 구현 및 테스트를 통해 메모리 변화를 조사하고 개선 사항을 검증한다.&lt;/p&gt;

&lt;p&gt;First, I will check if there is anything to learn additionally, and find previous studies and related materials in parallel with learning. Through that, I will prepare an appropriate memory change investigation plan and study an efficient game object generation plan.&lt;/p&gt;

&lt;p&gt;Finally, I’ll investigate memory changes and validate improvements by requirements deriving, designing, implementing, and testing for game object generation programs to be used in experiments.&lt;/p&gt;

&lt;h2 id=&quot;선행연구-및-관련-주제-자료-각-유형별-2개-이상-작성&quot;&gt;선행연구 및 관련 주제 자료 (각 유형별 2개 이상 작성)&lt;/h2&gt;

&lt;h3 id=&quot;단행본&quot;&gt;단행본&lt;/h3&gt;

&lt;p&gt;코딩을 지탱하는 기술 : 원리로 깨우치는 프로그래밍 기법 (니시오 히로카즈, 비제이퍼블릭)&lt;/p&gt;

&lt;p&gt;게임으로 배우는 파이썬 (다나카 겐이치로, 영진닷컴)&lt;/p&gt;

&lt;p&gt;Design Pattern (Erich Gamma/Richard Helm/Ralph Johnson/John Vlissides, Addison-Wesley)&lt;/p&gt;

&lt;h3 id=&quot;논문&quot;&gt;논문&lt;/h3&gt;

&lt;p&gt;KCI 등재&lt;/p&gt;

&lt;p&gt;&lt;em&gt;게임&lt;/em&gt; 소프트웨어의 품질 평가 모델 &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000297010&amp;amp;citationBean.artiId=ART001219939&quot;&gt;정혜정&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poInsiSearSoceView.kci?insiGeneInfoBean.insiId=INS000001854&quot;&gt;한국인터넷정보학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/ci/seriesSearch/ciSereInfoView.kci?sereSearBean.insiId=INS000001854&amp;amp;sereSearBean.sereId=001022&quot;&gt;인터넷정보학회논문지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poSereArtiList.kci?sereId=001022&amp;amp;volIsseId=VOL000000038&quot;&gt;8(6)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pp.115~125&lt;/li&gt;
  &lt;li&gt;2007.12&lt;/li&gt;
  &lt;li&gt;컴퓨터학&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;KCI 등재&lt;/p&gt;

&lt;p&gt;기획자를 위한 &lt;em&gt;객체&lt;/em&gt;지향적 &lt;em&gt;게임&lt;/em&gt;시스템 기획 방법 &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000283977&amp;amp;citationBean.artiId=ART002115504&quot;&gt;장희동&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poInsiSearSoceView.kci?insiGeneInfoBean.insiId=INS000000291&quot;&gt;한국&lt;em&gt;게임&lt;/em&gt;학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/ci/seriesSearch/ciSereInfoView.kci?sereSearBean.insiId=INS000000291&amp;amp;sereSearBean.sereId=001683&quot;&gt;한국&lt;em&gt;게임&lt;/em&gt;학회 논문지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poSereArtiList.kci?sereId=001683&amp;amp;volIsseId=VOL000073663&quot;&gt;16(3)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pp.17~26&lt;/li&gt;
  &lt;li&gt;2016.06&lt;/li&gt;
  &lt;li&gt;학제간연구&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;파이썬 활용한 데이터 처리 성능 향상방법 제안 (한국정보전자통신기술학회 2020, 김효관, 황원용)&lt;/p&gt;

&lt;p&gt;KCI 등재&lt;/p&gt;

&lt;p&gt;&lt;em&gt;DirectX&lt;/em&gt;를 &lt;em&gt;이용&lt;/em&gt;한 &lt;em&gt;게임&lt;/em&gt; &lt;em&gt;설계&lt;/em&gt;에서의 &lt;em&gt;생성&lt;/em&gt; &lt;em&gt;패턴&lt;/em&gt; &lt;em&gt;적용&lt;/em&gt; &lt;em&gt;기법&lt;/em&gt; &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000365858&amp;amp;citationBean.artiId=ART000957376&quot;&gt;김종수&lt;/a&gt; &lt;a href=&quot;https://www.kci.go.kr/kciportal/po/citationindex/poCretDetail.kci?citationBean.cretId=CRT000301226&amp;amp;citationBean.artiId=ART000957376&quot;&gt;김태석&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poInsiSearSoceView.kci?insiGeneInfoBean.insiId=INS000001307&quot;&gt;한국멀티미디어학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/ci/seriesSearch/ciSereInfoView.kci?sereSearBean.insiId=INS000001307&amp;amp;sereSearBean.sereId=000883&quot;&gt;멀티미디어학회논문지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kci.go.kr/kciportal/po/search/poSereArtiList.kci?sereId=000883&amp;amp;volIsseId=VOL000000016&quot;&gt;8(4)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pp.11~11&lt;/li&gt;
  &lt;li&gt;2005.04&lt;/li&gt;
  &lt;li&gt;전자/정보통신공학&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Java 기반 플랫폼 성능향상을 위한 모바일 게임 개발방법론&lt;/p&gt;

&lt;p&gt;Mobile Game Coding Method for Improving Performance of Java-based Platform&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=230832&quot;&gt;김혜정 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=920920&quot;&gt;남진우 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=927634&quot;&gt;문형석 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=929701&quot;&gt;송범휘 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=929702&quot;&gt;이학준 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=929703&quot;&gt;홍영화 &lt;/a&gt;,  주문원 ,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=909867&quot;&gt;최영미 &lt;/a&gt;,  &lt;a href=&quot;https://www.dbpia.co.kr/author/authorDetail?ancId=840360&quot;&gt;진성아&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dbpia.co.kr/journal/iprdDetail?iprdId=IPRD00010944&quot;&gt;한국멀티미디어학회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dbpia.co.kr/journal/publicationDetail?publicationId=PLCT00001772&quot;&gt;한국멀티미디어학회 학술발표논문집&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dbpia.co.kr/journal/voisDetail?voisId=VOIS00077264&quot;&gt;2006년도 추계학술발표논문집&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2006.11 / 797 - 800 (4 pages)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;학술대회자료&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기사-및-잡지-기타-유형의-자료&quot;&gt;기사 및 잡지, 기타 유형의 자료&lt;/h3&gt;

&lt;p&gt;https://www.codingame.com/start&lt;/p&gt;

&lt;p&gt;https://www.oodesign.com/design-principles&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">소논문 제안서 (IB컴퓨터과학 SL)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">상속</title>
      <link href="https://hweejoon-chung.github.io/inheritance-oop" rel="alternate" type="text/html" title="상속" />
      <published>2022-08-20T02:18:00+09:00</published>
      <updated>2022-08-20T02:18:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/inheritance-oop</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/inheritance-oop">&lt;hr /&gt;

&lt;h2 id=&quot;객체지향-상속-inheritance&quot;&gt;객체지향 (상속: Inheritance)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;여러 클래스에 중복되는 속성, 메서드를 하나의 클래스로 작성하는 것을 추상화라고 함&lt;/li&gt;
  &lt;li&gt;기본 클래스의 공통된 기능을 상속받고 다른 부분만 수정하는 것을 상속이라고 함&lt;/li&gt;
  &lt;li&gt;위의 경우에서 기본 클래스는 부모 클래스, 기본 클래스의 기능을 상속받는 클래스를 자식 클래스라고 함&lt;/li&gt;
  &lt;li&gt;부모 클래스가 둘 이상일 수 있으며, 그것을 다중 상속이라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Enemy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;
        
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fairy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Enemy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_stat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__health&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;health&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__speed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;
        
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘name’, ‘color’ 속성을 가진 ‘Enemy’ 클래스를 ‘health’, ‘speed’ 속성을 가진 ‘Fairy’ 클래스에 상속시켜줌&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Red_Fairy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fairy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;tina&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;red&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Red_Fairy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_stat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Red_Fairy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_info&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘Red_Fairy’ 오브젝트의 ‘name’을 ‘tina’로, ‘color’를 ‘red’로, ‘health’를 100으로, ‘speed’를 4로 설정&lt;/p&gt;

&lt;p&gt;그 후 그것들을 출력&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;함수 issubstance(‘classname1’, ‘classname2’)는 두 클래스가 상속 관계인가를 확인함&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;issubstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fairy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Enemy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘Red_Fairy’ 오브젝트가 ‘Enemy’ 클래스와 상속 관계인지 확인&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;함수 isinstance(‘objectname’, ‘classname’)는 오브젝트와 클래스가 상속 관계인가를 확인함&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;isinstance(Red_Fairy, Fairy)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘Red_Fairy’ 오브젝트가 ‘Fairy’ 클래스와 상속 관계인지 확인&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="oop" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Access Modifier(public, private, protected)</title>
      <link href="https://hweejoon-chung.github.io/accessmodifier-oop" rel="alternate" type="text/html" title="Access Modifier(public, private, protected)" />
      <published>2022-08-19T05:29:00+09:00</published>
      <updated>2022-08-19T05:29:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/accessmodifier-oop</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/accessmodifier-oop">&lt;hr /&gt;

&lt;h2 id=&quot;객체지향-접근제한자access-modifier-public-private-protected&quot;&gt;객체지향 접근제한자(Access Modifier: public, private, protected)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;public, private, protected는 정보 은닉 방식의 종류&lt;/li&gt;
  &lt;li&gt;public : 그 속성, Method는 어느 클래스에서나 접근할 수 있음&lt;/li&gt;
  &lt;li&gt;private : 그 속성, Method는 해당 클래스에서만 접근할 수 있음&lt;/li&gt;
  &lt;li&gt;protected : 그 속성, Method는 해당 클래스, 해당 클래스를 상속받은 클래스에서만 접근할 수 있음&lt;/li&gt;
  &lt;li&gt;파이썬에서는 기본적으로 모든 속성, Method가 public임&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_damage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파이썬에서 속성 이름 앞에 ‘_‘를 붙여 표시함&lt;/p&gt;

&lt;p&gt;단, 실제로 protected가 되는 것이 아니라 경고의 뜻으로만 사용됨&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__damage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;속성 이름 앞에 ‘__‘를 붙이면 실제로 private이 됨&lt;/p&gt;

&lt;p&gt;단, 그것은 단순히 해당 이름이 _‘classname’__‘속성 또는 method이름’으로 변경되기 때문임&lt;/p&gt;

&lt;p&gt;따라서 이 상태에서 전 포스트에서 썼던 print(heavymachinegun.damage) 등을 입력하면 에러가 발생함&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="oop" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Github로 Push 시 지연 문제</title>
      <link href="https://hweejoon-chung.github.io/action-github-git" rel="alternate" type="text/html" title="Github로 Push 시 지연 문제" />
      <published>2022-08-17T19:32:00+09:00</published>
      <updated>2022-08-17T19:32:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/action-github-git</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/action-github-git">&lt;h2 id=&quot;github로-push할-때-발생하는-지연&quot;&gt;Github로 push할 때 발생하는 지연&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;로컬git에서 commit후 리모트git으로 push하면 (아래 참조)&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hweej@DESKTOP-8US32TO MINGW64 /d/_JOON/blog/hweejoon-chung.github.io/_blogsite &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;update posts &amp;amp; add propertymethod post&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main 7454800] update posts &amp;amp; add propertymethod post
 25 files changed, 799 insertions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 587 deletions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 rename constructorp-oop.html &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; accessmodifier-oop.html &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;94%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 rename constructor2-oop.html &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; inheritance-oop.html &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;98%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

hweej@DESKTOP-8US32TO MINGW64 /d/_JOON/blog/hweejoon-chung.github.io/_blogsite &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin main
Enumerating objects: 71, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Counting objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;71/71&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Delta compression using up to 4 threads
Compressing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;35/35&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Writing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37/37&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 24.21 KiB | 1.05 MiB/s, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Total 37 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 26&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, reused 0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, pack-reused 0
remote: Resolving deltas: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;26/26&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, completed with 24 &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;objects.
To https://github.com/HweeJoon-Chung/hweejoon-chung.github.io.git
   f66e097..7454800  main -&amp;gt; main

hweej@DESKTOP-8US32TO MINGW64 /d/_JOON/blog/hweejoon-chung.github.io/_blogsite &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;실제 Github로 push되어 처리&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;지연이 발생하는 이유는&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Github의 Actions 메뉴에서 확인가능하다.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;https://github.com/HweeJoon-Chung/hweejoon-chung.github.io/actions&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;page들을 build하고 build상태를 리포트(report-build-status)한 후 최종적으로 deploy하는데 시간이 걸림&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;보통 build대상이 많지 않으면 3분~5분 내로 완료됨&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html">Github로 push할 때 발생하는 지연</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">생성자와 소멸자</title>
      <link href="https://hweejoon-chung.github.io/constructor-oop" rel="alternate" type="text/html" title="생성자와 소멸자" />
      <published>2022-08-17T06:38:00+09:00</published>
      <updated>2022-08-17T06:38:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/constructor-oop</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/constructor-oop">&lt;hr /&gt;

&lt;h2 id=&quot;객체지향-생성자와-소멸자-메서드&quot;&gt;객체지향 (생성자와 소멸자 메서드)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;생성자는 객체를 생성될 때 호출됨&lt;/li&gt;
  &lt;li&gt;첫 번째 인자는 ‘self’&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘Weapon’ Class의 Object가 생성됐을 때, ‘self.weight’를 ‘weight’로,  ‘self.damage’를 ‘damage’로,  ‘self.color’를 ‘color’로 설정&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;heavymachinegun&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘Weapon’ Class의 ‘heavymachinegun’ Object의 ‘weight’, ‘damage’, ‘color’를 입력받은 값으로 설정&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;소멸자는 객체가 소멸될 때 호출됨&lt;/li&gt;
  &lt;li&gt;첫 번째 인자는 ‘self’&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;damage&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;
		
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__del__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Object deleted.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘Weapon’ Class의 Object가 소멸됐을 때, “Object deleted”를 출력&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;heavymachinegun&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘Weapon’ Class의 ‘heavymachinegun’ Object의 ‘weight’, ‘damage’, ‘color’를 입력받은 값으로 설정&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print(heavymachinegun.damage)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘heavymachinegun’ Object의 ‘damage’ 속성을 출력&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="oop" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">클래스와 객체(오브젝트,인스턴스)</title>
      <link href="https://hweejoon-chung.github.io/classobject-oop" rel="alternate" type="text/html" title="클래스와 객체(오브젝트,인스턴스)" />
      <published>2022-08-13T06:43:00+09:00</published>
      <updated>2022-08-13T06:43:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/classobject-oop</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/classobject-oop">&lt;hr /&gt;

&lt;h2 id=&quot;객체지향-class와-object&quot;&gt;객체지향 (class와 object)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Class를 틀/설계도라 할 때, Object는 하나의 완성품&lt;/li&gt;
  &lt;li&gt;Class의 속성, 함수 등은 그 Class의 Object도 갖게 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;classname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘classname’이라는 이름의 Class를 선언&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘classname’ Class와 관련된 전체 속성들을 리스트로 출력&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;objectname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objectname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘classname’ Class로 ‘objectname’이라는 이름의 Object 생성&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objectname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘objectname’ Object의 Class를 출력&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;classname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ypos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;stance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;idle&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘classname’ Class에 ‘xpos’, ‘ypos’, ‘stance’ 라는 속성을 추가&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;objectname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘objectname’ Object의 ‘xpos’ 속성을 50으로 변경&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;classname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ypos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;stance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;idle&quot;&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_xypos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ypos&lt;/span&gt;
		
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_xypos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data1&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ypos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘get_xypos’, ‘set_xypos’ Method를 추가&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위에서 ‘get_xypos’, ‘set_xypos’는 클래스 내부에서 접근했기 때문에 클래스 밖에서는 사용 불가&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;objectname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xypos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘objectname’ Object에서 (2, 2)를 넣고 ‘set_xypos’ Method를 실행&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;‘objectname’ Object의 ‘self.xpos’가 2, ‘self.ypos’가 2로 변경됨&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="oop" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">소논문(Extended Essay)(일정, 가이드 및 평가기준)</title>
      <link href="https://hweejoon-chung.github.io/extendedessay-paper" rel="alternate" type="text/html" title="소논문(Extended Essay)(일정, 가이드 및 평가기준)" />
      <published>2022-08-11T20:33:00+09:00</published>
      <updated>2022-08-11T20:33:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/extendedessay-paper</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/extendedessay-paper">&lt;hr /&gt;
&lt;h1 id=&quot;소논문extended-essay-일정-가이드-및-평가기준&quot;&gt;소논문(Extended Essay) (일정, 가이드 및 평가기준)&lt;/h1&gt;

&lt;h2 id=&quot;소논문&quot;&gt;소논문&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;관심있는 학문 분야를 깊이 연구하여 학문적 호기심과 역량을 4,000단어 이하의 학술적인 글로 표현하는 개별 연구 프로젝트
    &lt;ul&gt;
      &lt;li&gt;지식이론(Theory Of Knowledge), 창의활동봉사(Creativity, Activity, Service)와 함께 IB Diploma Program의 핵심 요소&lt;/li&gt;
      &lt;li&gt;연구, 비판적 사고력, 자기관리 능력과 함께 대학에서 기대되는 학술적 글쓰기 능력을 개발할 수 있으며, 힘들지만 큰 보람을 느끼는 과정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;지식을 분석, 종합, 평가하는 능력이 개발됨
    &lt;ul&gt;
      &lt;li&gt;연구 대상에 대한 적절한 질문들을 표현해낼 수 있다.&lt;/li&gt;
      &lt;li&gt;주제에 대한 개인적 탐구과정을 수행해낼 수 있다.&lt;/li&gt;
      &lt;li&gt;아이디어를 교류할 수 있다.&lt;/li&gt;
      &lt;li&gt;본인의 주장이나 논쟁을 진행할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;개인적-느낌&quot;&gt;개인적 느낌&lt;/h3&gt;

  &lt;ul&gt;
    &lt;li&gt;본인이 특정 분야에서 어떤 일을 하고자 할때, 그 일에 관해 배워나가는 준비과정을 체험할 수 있겠다.&lt;/li&gt;
    &lt;li&gt;개인적인 관심 주제를 깊이 파고들거나 다른 분야와 융합할 수 있는 접근방식을 배울 수 있겠다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;일정&quot;&gt;일정&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;ul class=&quot;task-list&quot;&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;~ 2022년 8월 29일 : 소논문 제안서 제출 마감&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;9월 중 : 지도교사 배정 - &lt;strong&gt;첫번째 필수성찰세션 (1st mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;11월 말 : 소논문 1,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;12월 말 : 소논문 2,000단어 분량 작성 - &lt;strong&gt;두번째 필수성찰세션 (2nd mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 3월 중순 : 소논문 3,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 5월 중순 : 소논문 4,000단어 분량 작성&lt;/li&gt;
    &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;2023년 5월 31일 : 소논문 최종본 제출 마감 - &lt;strong&gt;마지막 필수성찰세션(viva voce: final mandatory reflection session)&lt;/strong&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;가이드-ib컴퓨터과학-sl&quot;&gt;가이드 (IB컴퓨터과학 SL)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;추가 예정(개학 후 담당교사로부터 입수)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;평가기준&quot;&gt;평가기준&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;IB가 임명한 심사관들이 외부에서 평가 (0~34점)
    &lt;ul&gt;
      &lt;li&gt;A – work of an excellent standard.&lt;/li&gt;
      &lt;li&gt;B – work of a good standard.&lt;/li&gt;
      &lt;li&gt;C –work of a satisfactory standard.&lt;/li&gt;
      &lt;li&gt;D – work of a mediocre standard.&lt;/li&gt;
      &lt;li&gt;E – work of an elementary standard.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;​&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;관련 문의 : 소논문 코디네이터 (064-786-5577, &lt;a href=&quot;mailto:hatsal@korea.kr&quot;&gt;hatsal@korea.kr&lt;/a&gt;)&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="paper" />
      

      
        <summary type="html">소논문(Extended Essay) (일정, 가이드 및 평가기준)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">객체지향 프로그래밍 기본</title>
      <link href="https://hweejoon-chung.github.io/oopbasic-oop" rel="alternate" type="text/html" title="객체지향 프로그래밍 기본" />
      <published>2022-07-30T08:52:00+09:00</published>
      <updated>2022-07-30T08:52:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/oopbasic-oop</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/oopbasic-oop">&lt;h2 id=&quot;프로그래밍-언어&quot;&gt;프로그래밍 언어&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;컴퓨터와 의사소통 하기 위한 명령들로 이루어진 프로그램을 작성할 수 있도록 만든 언어&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;인간은 보다 발전된 계산기인 컴퓨터를 만들었음&lt;/li&gt;
  &lt;li&gt;컴퓨터(CPU)는 0과 1, 즉 이진수 형태의 코드인 기계어만 이해함.
    &lt;ul&gt;
      &lt;li&gt;Instruction set : CPU가 수행할 수 있는 명령어 집합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기계어나 어셈블리어와 같은 저급언어는 컴퓨터가 이해하기 용이하지만, 인간이 이해하기 어려움&lt;/li&gt;
  &lt;li&gt;인간이 이해하기 쉬운 고급언어(C, JAVA, PYTHON등)를 사용하여 프로그래밍함&lt;/li&gt;
  &lt;li&gt;어셈블리어나 고급언어는 기계어로 변환되어 CPU로 전달되어 실행
    &lt;ul&gt;
      &lt;li&gt;변환 시 어셈블러, 인터프리터(PYTHON, RUBY 등)나 컴파일러(C, JAVA 등) 프로그램 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;절차적-프로그래밍에서-객체지향-프로그래밍으로&quot;&gt;절차적 프로그래밍에서 객체지향 프로그래밍으로…&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;PACSCAL이나 C와 같은 절자적 프로그래밍에서 객체 단위로 데이터와 기능을 통합사용하는 객체지향 프로그래밍으로 발전&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;핵심은 Class와 Object(Instance)&lt;/li&gt;
  &lt;li&gt;Class는 틀이나 설계도 (ex. 무기 설계도)이며 Attribute(데이터)와 Method(기능)을 가짐&lt;/li&gt;
  &lt;li&gt;Object는 실체화된 객체 (ex. 실체화된 K2소총/REDSTOE미사일) 이며 정의된 Class로 생성 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;객체지향-프로그래밍object-oriented-programming-oop&quot;&gt;객체지향 프로그래밍(Object-Oriented Programming: OOP)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;틀/설계도인 Class 설계하고 코드화&lt;/li&gt;
  &lt;li&gt;Class를 활용하여 필요한 Object 생성하여 그 데이터와 기능 이용하여 프로그래밍&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="oop" />
      

      
        <summary type="html">프로그래밍 언어</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python - 기본</title>
      <link href="https://hweejoon-chung.github.io/python-basic" rel="alternate" type="text/html" title="Python - 기본" />
      <published>2022-02-25T08:32:00+09:00</published>
      <updated>2022-02-25T08:32:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/python-basic</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/python-basic">&lt;h2 id=&quot;python-기본&quot;&gt;Python 기본&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Python 기초를 넘어 기본 개념 중 기억할 것들만 정리&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자료를 거꾸로 출력하기&lt;/p&gt;

    &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;10
9
8
7
6
5
4
3
2
1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 기본</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Unity 기본</title>
      <link href="https://hweejoon-chung.github.io/unity-basic" rel="alternate" type="text/html" title="Unity 기본" />
      <published>2021-11-28T04:32:00+09:00</published>
      <updated>2021-11-28T04:32:00+09:00</updated>
      <id>https://hweejoon-chung.github.io/unity-basic</id>
      <content type="html" xml:base="https://hweejoon-chung.github.io/unity-basic">&lt;h2 id=&quot;unity---unity-software라는-회사가-만든-게임엔진이자-통합-저작-도구-게임엔진이자-앱개발-머신러닝-애니메이션-등-다양한-작업에-활용&quot;&gt;Unity - Unity Software라는 회사가 만든 게임엔진이자 통합 저작 도구. 게임엔진이자 앱개발, 머신러닝, 애니메이션 등 다양한 작업에 활용.&lt;/h2&gt;

&lt;p&gt;게임 엔진 - 2D 및 3D 비디오 게임의 개발 환경을 제공하여 모든 작업을 하나하나 코딩해줘야 하는 번거로움을 줄이고 이미 개발되어 있는 다양한 기능들을 조립 방식으로 사용. 게임을 만드는 데 도움이 되거나 필요한 다양한 라이브러리/툴들과 기능들을 모아 놓은 소프트웨어._&lt;/p&gt;

&lt;p&gt;Windows 64bit 버전과 Mac OS X Sierra 10.12.6+, Ubuntu 16.04/18.04 지원&lt;/p&gt;

&lt;p&gt;DX10+ 지원 GPU 그래픽 카드&lt;/p&gt;

&lt;p&gt;Unity Hub는 여러 버전의 유니티를 설치 가능.&lt;/p&gt;

&lt;h2 id=&quot;기본-개념&quot;&gt;기본 개념&lt;/h2&gt;

&lt;p&gt;객체(Object) : 게임의 캐릭터 처럼 게임에서 보이는 물체&lt;/p&gt;

&lt;p&gt;컴포넌트 : 게임객체의 모양, 재질, 물리적 특성, 동작 등을 정의 (객체는 컴포넌트로 이뤄짐). 인스펙터 윈도우에서 설정.&lt;/p&gt;

&lt;p&gt;스크립트 : 컴포넌트 중 객체의 동작을 정의하는 것. C# 또는 Javascript 지원.&lt;/p&gt;

&lt;p&gt;유니티에서 프로그래머가 원하는 대로 게임객체를 동작하게 하려면 스크립트에 원하는 코드를 정의하면 됨.&lt;/p&gt;

&lt;p&gt;게임에서 플레이어의 몹사냥, 다른 플레이어와의 전투 등 게임객체 간 상호작용이 많이 발생하는데, 유니티에서는 이벤트 기반으로 처리함.(플레이어가 몹 공격 시 충돌 이벤트 발생하여 몹 객체 안에 코딩된 스크립트에서 다음 동작 결정)&lt;/p&gt;

&lt;h2 id=&quot;인터페이스&quot;&gt;인터페이스&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;툴바(Toolbar) : 씬뷰(Scene view)와 게임객체들(GameObjects)을 조작하는 기본 툴, 게임 실행/멈춤/정지/스텝 컨트롤, 서비스 관련 접근, 레이어 메뉴, 에디터 레이아웃 메뉴&lt;/li&gt;
  &lt;li&gt;계층 윈도우(Hierarchy Window) : Scene 내에 만든 모든 게임객체들(GameObjects)의 계층화된 목록.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Scene 내 아이템을 추가하려면 계층 윈도우에서 시작하고 씬뷰와 연결되어 있음. 계층화되어 있어 부모 자식 관계 존재.&lt;/p&gt;

&lt;p&gt;자식은 부모의 이동과 회전 속성을 상속 가능.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;씬뷰(Scene View) : 개발자가 생성한 모든 객체와 카메라/조명과 같은 게임에 필요한 기본 객체가 배치.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;씬뷰에서 객체를 조작하고 설정하는 것이 유니티의 핵심.&lt;/p&gt;

&lt;p&gt;프로젝트의 종류에 따라 2D 또는 3D 관점.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;게임뷰(Game View) : 씬 카메라로 보이는 최종 만들어진 게임 모습.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;유니티에서는 카메라 개념을 통해 사용자에게 보여지는 화면을 제어하는데, 카메라가 바라보는 게임의 최종 모습이 게임뷰에 나타남.&lt;/p&gt;

&lt;p&gt;툴바의 게임 실행 버튼을 누르면 게임뷰 이동하여 게임이 실행.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;인스펙터 윈도우(Inspector Window) : 현재 선택된 게임객체(GameObject)의 모든 속성이 표시되고 편집 가능.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;게임객체에 따라 다른 종류의 속성들을 가지므로 인스펙터 윈도우의 레이아웃과 항목들도 선택한 게임객체에 따라 변화.&lt;/p&gt;

&lt;p&gt;게임객체의 위치, 외형, 중력, 사용자 정의 스크립트 등 다양한 속성 설정/변경 가능&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;프로젝트 윈도우(Project Window) : 프로젝트 내에서 사용가능한 모든 에셋(Asset) 목록 표시.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;프로젝트로 에셋을 Import하면 프로젝트 윈도우에 표시됨.&lt;/p&gt;

&lt;p&gt;좌측 계층구조창에는 폴더 목록, 우측화면에는 폴더 목록에서 선택한 폴더의 에셋 목록 표시.&lt;/p&gt;

&lt;p&gt;에셋 목록에서 에셋을 선택하면 인스펙터 윈도우에 관련 정보 표시됨.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;콘솔 윈도우( Console Window) : 유니티에서 생성되는 오류, 경고 등 다양한 메시지 출력.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Debug.Log, Debug.LogWarning, Debug.LogError 함수 이용하여 표시.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Hwee Joon Chung</name>
        
        
      </author>

      

      
        <category term="unity" />
      

      
        <summary type="html">Unity - Unity Software라는 회사가 만든 게임엔진이자 통합 저작 도구. 게임엔진이자 앱개발, 머신러닝, 애니메이션 등 다양한 작업에 활용.</summary>
      

      
      
    </entry>
  
</feed>
